@page "/Prestamos/Edit/{DeudorId:int}"
@rendermode InteractiveServer
@inject PrestamoService PrestamosServices
@inject NavigationManager Navigation


<EditForm Model="Prestamo" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />

	<div class="Container">
		<div class="card shadow-lg">
			<div class="card-header">
				<h2 class="card-title"> Modificar Prestamo</h2>
			</div>
			<div class="card-body">
				@*Nombre*@
				<label class="form-label">Deudor</label>
				<InputText class="form-control" @bind-Value="Prestamo.Nombres" placeholder="Juan perez"></InputText>
				<ValidationMessage For="@(() => Prestamo.Nombres)" />
				@*Concepto*@
				<label class="form-label">Concepto</label>
				<InputText class="form-control" @bind-Value="Prestamo.Concepto" placeholder="Compra de un vehiculo"></InputText>
				<ValidationMessage For="@(() => Prestamo.Concepto)" />
				@*Deuda*@
				<lable class="form-label">Deuda</lable>
				<InputNumber class="form-control" @bind-Value="Prestamo.Deuda" placeholder="5000$"></InputNumber>
				<ValidationMessage For="@(() => Prestamo.Deuda)" />

				@if (!string.IsNullOrEmpty(mensaje))
				{
					<div class="alert alert-success">@mensaje</div>
				}

			</div>
			@*Botones*@

			<div class="card-footer">
				<a href="/Registro/Index" class="btn btn-outline-primary bi bi-arrow-left">Volver</a>
				<button type="submit" class="btn btn-outline-success bi bi-floppy">Modificar</button>
			</div>


		</div>

	</div>
</EditForm>




@code {
	[Parameter]
	public int DeudorId { get; set; }
	public Prestamos Prestamo { get; set; } = new Prestamos();
	public string mensaje { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Prestamo = await PrestamosServices.Buscar(DeudorId);
	}

	public async Task Modificar()
	{
			await PrestamosServices.Guardar(Prestamo);
			Navigation.NavigateTo("/Registro/Index");
			mensaje = "Prestamo actualizado";
	}

}
